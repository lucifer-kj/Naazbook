{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Desktop/naazbook/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\r\n\r\nconst globalForPrisma = globalThis as unknown as {\r\n  prisma: PrismaClient | undefined\r\n}\r\n\r\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient()\r\n\r\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma "],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAEhE,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Desktop/naazbook/app/api/products/route.ts"],"sourcesContent":["export const runtime = 'nodejs'\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { prisma } from '@/lib/prisma';\r\n\r\nexport async function GET(req: NextRequest) {\r\n  try {\r\n    const { searchParams } = new URL(req.url);\r\n    const category = searchParams.get('category');\r\n    const search = searchParams.get('search');\r\n    const priceRange = searchParams.get('priceRange');\r\n    const stockStatus = searchParams.get('stockStatus');\r\n    const sortBy = searchParams.get('sortBy') || 'newest';\r\n    const page = parseInt(searchParams.get('page') || '1', 10);\r\n    const pageSize = parseInt(searchParams.get('pageSize') || '9', 10);\r\n    \r\n    const where: {\r\n      isActive: boolean;\r\n      categoryId?: string;\r\n      OR?: Array<{ name?: { contains: string; mode: 'insensitive' }; description?: { contains: string; mode: 'insensitive' } }>;\r\n      price?: { gte?: number; lte?: number };\r\n      stock?: { gt?: number; lte?: number };\r\n    } = { isActive: true };\r\n    \r\n    // Category filter\r\n    if (category) where.categoryId = category;\r\n    \r\n    // Search filter\r\n    if (search) {\r\n      where.OR = [\r\n        { name: { contains: search, mode: 'insensitive' } },\r\n        { description: { contains: search, mode: 'insensitive' } },\r\n      ];\r\n    }\r\n    \r\n    // Price range filter\r\n    if (priceRange && priceRange !== 'all') {\r\n      switch (priceRange) {\r\n        case '0-500':\r\n          where.price = { gte: 0, lte: 500 };\r\n          break;\r\n        case '500-1000':\r\n          where.price = { gte: 500, lte: 1000 };\r\n          break;\r\n        case '1000-2000':\r\n          where.price = { gte: 1000, lte: 2000 };\r\n          break;\r\n        case '2000+':\r\n          where.price = { gte: 2000 };\r\n          break;\r\n      }\r\n    }\r\n    \r\n    // Stock status filter\r\n    if (stockStatus && stockStatus !== 'all') {\r\n      switch (stockStatus) {\r\n        case 'in-stock':\r\n          where.stock = { gt: 10 };\r\n          break;\r\n        case 'low-stock':\r\n          where.stock = { gt: 0, lte: 10 };\r\n          break;\r\n        case 'out-of-stock':\r\n          where.stock = { lte: 0 };\r\n          break;\r\n      }\r\n    }\r\n    \r\n    // Sorting\r\n    let orderBy: { createdAt?: 'asc' | 'desc'; price?: 'asc' | 'desc'; name?: 'asc' | 'desc' } = {};\r\n    switch (sortBy) {\r\n      case 'oldest':\r\n        orderBy = { createdAt: 'asc' };\r\n        break;\r\n      case 'price-low':\r\n        orderBy = { price: 'asc' };\r\n        break;\r\n      case 'price-high':\r\n        orderBy = { price: 'desc' };\r\n        break;\r\n      case 'name-asc':\r\n        orderBy = { name: 'asc' };\r\n        break;\r\n      case 'name-desc':\r\n        orderBy = { name: 'desc' };\r\n        break;\r\n      default: // newest\r\n        orderBy = { createdAt: 'desc' };\r\n    }\r\n    \r\n    const [products, total] = await Promise.all([\r\n      prisma.product.findMany({\r\n        where,\r\n        orderBy,\r\n        skip: (page - 1) * pageSize,\r\n        take: pageSize,\r\n        select: {\r\n          id: true,\r\n          name: true,\r\n          price: true,\r\n          images: true,\r\n          slug: true,\r\n          categoryId: true,\r\n        },\r\n      }),\r\n      prisma.product.count({ where }),\r\n    ]);\r\n    \r\n    return NextResponse.json({ products, total });\r\n  } catch (error) {\r\n    console.error('Error in /api/products:', error);\r\n    return NextResponse.json({ error: 'Failed to fetch products' }, { status: 500 });\r\n  }\r\n} "],"names":[],"mappings":";;;;AACA;AACA;AAFO,MAAM,UAAU;;;AAIhB,eAAe,IAAI,GAAgB;IACxC,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;QACxC,MAAM,WAAW,aAAa,GAAG,CAAC;QAClC,MAAM,SAAS,aAAa,GAAG,CAAC;QAChC,MAAM,aAAa,aAAa,GAAG,CAAC;QACpC,MAAM,cAAc,aAAa,GAAG,CAAC;QACrC,MAAM,SAAS,aAAa,GAAG,CAAC,aAAa;QAC7C,MAAM,OAAO,SAAS,aAAa,GAAG,CAAC,WAAW,KAAK;QACvD,MAAM,WAAW,SAAS,aAAa,GAAG,CAAC,eAAe,KAAK;QAE/D,MAAM,QAMF;YAAE,UAAU;QAAK;QAErB,kBAAkB;QAClB,IAAI,UAAU,MAAM,UAAU,GAAG;QAEjC,gBAAgB;QAChB,IAAI,QAAQ;YACV,MAAM,EAAE,GAAG;gBACT;oBAAE,MAAM;wBAAE,UAAU;wBAAQ,MAAM;oBAAc;gBAAE;gBAClD;oBAAE,aAAa;wBAAE,UAAU;wBAAQ,MAAM;oBAAc;gBAAE;aAC1D;QACH;QAEA,qBAAqB;QACrB,IAAI,cAAc,eAAe,OAAO;YACtC,OAAQ;gBACN,KAAK;oBACH,MAAM,KAAK,GAAG;wBAAE,KAAK;wBAAG,KAAK;oBAAI;oBACjC;gBACF,KAAK;oBACH,MAAM,KAAK,GAAG;wBAAE,KAAK;wBAAK,KAAK;oBAAK;oBACpC;gBACF,KAAK;oBACH,MAAM,KAAK,GAAG;wBAAE,KAAK;wBAAM,KAAK;oBAAK;oBACrC;gBACF,KAAK;oBACH,MAAM,KAAK,GAAG;wBAAE,KAAK;oBAAK;oBAC1B;YACJ;QACF;QAEA,sBAAsB;QACtB,IAAI,eAAe,gBAAgB,OAAO;YACxC,OAAQ;gBACN,KAAK;oBACH,MAAM,KAAK,GAAG;wBAAE,IAAI;oBAAG;oBACvB;gBACF,KAAK;oBACH,MAAM,KAAK,GAAG;wBAAE,IAAI;wBAAG,KAAK;oBAAG;oBAC/B;gBACF,KAAK;oBACH,MAAM,KAAK,GAAG;wBAAE,KAAK;oBAAE;oBACvB;YACJ;QACF;QAEA,UAAU;QACV,IAAI,UAAyF,CAAC;QAC9F,OAAQ;YACN,KAAK;gBACH,UAAU;oBAAE,WAAW;gBAAM;gBAC7B;YACF,KAAK;gBACH,UAAU;oBAAE,OAAO;gBAAM;gBACzB;YACF,KAAK;gBACH,UAAU;oBAAE,OAAO;gBAAO;gBAC1B;YACF,KAAK;gBACH,UAAU;oBAAE,MAAM;gBAAM;gBACxB;YACF,KAAK;gBACH,UAAU;oBAAE,MAAM;gBAAO;gBACzB;YACF;gBACE,UAAU;oBAAE,WAAW;gBAAO;QAClC;QAEA,MAAM,CAAC,UAAU,MAAM,GAAG,MAAM,QAAQ,GAAG,CAAC;YAC1C,+GAAA,CAAA,SAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;gBACtB;gBACA;gBACA,MAAM,CAAC,OAAO,CAAC,IAAI;gBACnB,MAAM;gBACN,QAAQ;oBACN,IAAI;oBACJ,MAAM;oBACN,OAAO;oBACP,QAAQ;oBACR,MAAM;oBACN,YAAY;gBACd;YACF;YACA,+GAAA,CAAA,SAAM,CAAC,OAAO,CAAC,KAAK,CAAC;gBAAE;YAAM;SAC9B;QAED,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;YAAU;QAAM;IAC7C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA2B,GAAG;YAAE,QAAQ;QAAI;IAChF;AACF","debugId":null}}]
}
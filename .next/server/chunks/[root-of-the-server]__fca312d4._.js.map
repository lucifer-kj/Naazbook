{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Desktop/naazbook/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\r\n\r\nconst globalForPrisma = globalThis as unknown as {\r\n  prisma: PrismaClient | undefined\r\n}\r\n\r\nexport const prisma = globalForPrisma.prisma ?? new PrismaClient()\r\n\r\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma "],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SAAS,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAEhE,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Desktop/naazbook/app/api/categories/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport { prisma } from '@/lib/prisma';\r\n\r\nexport const runtime = 'nodejs'\r\n\r\nexport async function GET() {\r\n  try {\r\n    const categories = await prisma.category.findMany({\r\n      where: { isActive: true },\r\n      select: {\r\n        id: true,\r\n        name: true,\r\n        slug: true,\r\n      },\r\n      orderBy: { name: 'asc' },\r\n    });\r\n    return NextResponse.json(categories);\r\n  } catch (error) {\r\n    console.error('Error in /api/categories:', error);\r\n    return NextResponse.json({ error: 'Failed to fetch categories' }, { status: 500 });\r\n  }\r\n} "],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,MAAM,UAAU;AAEhB,eAAe;IACpB,IAAI;QACF,MAAM,aAAa,MAAM,+GAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAChD,OAAO;gBAAE,UAAU;YAAK;YACxB,QAAQ;gBACN,IAAI;gBACJ,MAAM;gBACN,MAAM;YACR;YACA,SAAS;gBAAE,MAAM;YAAM;QACzB;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA6B,GAAG;YAAE,QAAQ;QAAI;IAClF;AACF","debugId":null}}]
}